///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  Defines the editHUD, visible bottom-left while editing:
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Built-in edithud stuff:  (/showeditstats)
//      wtr  =  OctreeData:  Number of Triangles    (% of total)
//      wvt  =  OctreeData:  Number of Vertices     (% of total)
//      evt  =               Number of "Extra" Vertices??           I see this a lot: "xtraverts += gle::end()"     "gle::end()" returns "numvertexes"
//      eva  =               Number of "Extra" VertexArrays??       I see this a lot: "xtravertsva += numverts"     These both appear to be measuring vertex counts of something(s)...
//
//      ond  =  OctreeData:  Number of Nodes
//       va  =  OpenGL:      Number of VertexArrays
//       gl  =  OpenGL:      Number of DrawCalls    ("Batches")
//       oq  =  OpenGL:      Number of "Queries"
//       lm  =  MapData:     Number of Lightmap Textures
//       rp  =  MapDataish:  Number of Render Planes currently visible (used for water refraction & reflection)
//      pvs  =  MapData:     Number of PVS ViewCells
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
rehud = [clearconsole; exec "data/edithud.cfg"]

nodebug [
    defsvar  edithud_debugthis      ""
    defvar   edithud_debugthisparty 0 0 1

    defvarp  edithud_showplayerpos 0 0 1
    defvarp  edithud_showplayerrot 0 0 1

    defvarp  edithud_showtexparams      0 1 1
    defvarp  edithud_showtexparamslayer 0 0 1

    defsvarp edithud_listbools       "allfaces entediting entselsnap entcamdir"
    defsvarp edithud_listboolsshy    "gridlookup showwaypoints"
    defsvarp edithud_listboolsnotice "dropwaypoints"
    defsvarp edithud_listvars        "floatspeed (result (concatword ^"^f~gridpower ^f2^" $gridpower ^"^f~(^f2^" (+ (pow 2 $gridpower)) ^"^f~)^"))"

    defsvar  EH_DebugList            ""
    defvar   EH_ParticleTypeIsValid  0 0 1
    defsvar  EH_AttrLabel            ""
]

edithud = [
    format "%1%2%3%4%5%6" (
        if $edithud_debugthis     [EH__DebugThis]
    )(  if $edithud_showplayerpos [EH__PlayerPos]
    )(  if $edithud_showplayerrot [EH__PlayerRot]
  //)(  if $edithud_debugthis     [EH__TexHistory]
    )(  EH__FaceTex_BlendMap_HeightMap
    )(  EH__EntitySelection
    )(  EH__Vars
    )
]
TODO 5 "edithud.cfg -- 'havesel'?."


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EH__DebugThis = [
    EH_DebugList $edithud_debugthis
    ListLen = (listlen $EH_DebugList)
    TextColor = "^f8"
    if $edithud_debugthisparty [
        TextColor = (concatword "^f" (mod (div $getmillis 66) 9))
    ]
    if (> $ListLen 1) [
        String = $TextColor
        loop iVar $ListLen [
            This = (at $EH_DebugList $iVar)
            if (> (listlen $$This) 1) [
                String = (concatword $String $This " = [ " (prettylist $$This) " ]^n")
            ][  String = (concatword $String $This " = "               $$This    "^n")
            ]
        ]
        concatword $String "^n"
    ][
        if (> (listlen $$edithud_debugthis) 1) [
            format "%1%2 = [ %3 ]^n^n" $TextColor $edithud_debugthis (prettylist $$edithud_debugthis)
        ][  format "%1%2 = %3^n^n"     $TextColor $edithud_debugthis             $$edithud_debugthis
        ]
    ]
]
//    if $edithud_listvars [
//        String = (concatword $String "^n")
//        ListLen = (listlen $edithud_listvars)
//        loop iVar $ListLen [
//            This = (at $edithud_listvars $iVar)
//            if (= (strstr $This "result") 0) [
//                String = (concatword $String (This) "  ")
//            ][
//                String = (concatword $String "^f~" $This " ^f2" $$This "  ")
//            ]
//        ]
//    ]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EH__PlayerPos = [
    format "^f7position: ^f3%1  ^f0%2  ^f1%3%4" (at $getcampos 0) (at $getcampos 1) (at $getcampos 2) (? (!= $edithud_showplayerrot 0) "^n" "^n^n")
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EH__PlayerRot = [
    format "^f7rotation: ^f3%1  ^f0%2  ^f1%3^n^n" $getcampitch $getcamroll $getcamyaw  //  Sauer's axes are weird. :P
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EH__TexHistory = [
    //  getcurtex       "Get Current Texture"  Index of last used texture.
    //  getreptex       "Get Replace Texture"  Index of last texture replaced. (/replace uses this)
    //result "^f~[^f2~^f~] ^f2^"~^"^n^n" //  None.
    format "^f~[^f0%1^f~] ^f0^"%2^"^n^f~[^f0%3^f~] ^f0^"%4^"^n^n" $getcurtex (gettexname $getcurtex) $getreptex (gettexname $getreptex)
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EH__FaceTex_BlendMap_HeightMap = [
    cond [ $hmapedit ][format "heightmap^n*  brush: ^f~[^f2%1^f~] ^f2^"%2^"^n^n" $currentbrush $currentbrushname
    ][$blendpaintmode][format "blendmap^n*  mode: ^f2^"%1^"^f~^n*  brush: ^f~[^f2%2^f~] ^f2^"%3^"^n^n" (at $_Labels_BlendPaintMode $blendpaintmode) (curblendbrush) (getblendbrushname $curblendbrush)
    ][ ! $enthavesel ][
        if (! $getseltex) [
            result "^f~[^f2~^f~] ^f2^"~^"^n^n" //  None or multiple selected.
        ][
            if (= $edithud_showtexparams 0) [
                format "^f~[^f2%1^f~] ^f2^"%2^"^n^n" $getseltex (gettexname $getseltex)
            ][
                format "%1%2^n" (
                    format "^f~[^f2%1^f~] ^f2^"%2^"^n" $getseltex (gettexname $getseltex)
                )(
                    format "%1%2%3%4%5%6%7%8%9" (
                        EH_TexColor      $getseltex 2 "*"
                    )(  EH_TexAlpha      $getseltex 2 "*"
                    )(  EH_TexOffset     $getseltex 2 "*"
                    )(  EH_TexRotate     $getseltex 2 "*"
                    )(  EH_TexScale      $getseltex 2 "*"
                    )(  EH_TexScroll     $getseltex 2 "*"
                    )(  EH_TexSmooth     $getseltex 2 "*"
                    )(  EH_vShaderParams $getseltex 2 "*"
                    )(  EH_TexLayer      $getseltex 6 "+"
                    )
                )
            ]
        ]
    ]
]

//#############################################################################################################################################
//#############################################################################################################################################
EH_TexColor = [
    if (|| (!=f (at (getvcolor $arg1) 0) 1.0) (!=f (at (getvcolor $arg1) 1) 1.0) (!=f (at (getvcolor $arg1) 2) 1.0)) [
        concatword "^f~" $arg3 " color:^t^f3" (at (getvcolor $arg1) 0) "  ^f0" (at (getvcolor $arg1) 1) "  ^f1" (at (getvcolor $arg1) 2) "^n"
    ]
]

//#############################################################################################################################################
EH_TexAlpha = [
    if (|| (!=f (at (getvalpha $arg1) 0) 0.5) (!=f (at (getvalpha $arg1) 1) 0.0) ) [
        concatword "^f~" $arg3 " alpha:^tfront: ^f5" (at (getvalpha  $arg1) 0) "  ^f~back: ^f5" (at (getvalpha  $arg1) 1) "^n"
    ]
]

//#############################################################################################################################################
EH_TexRotate = [
    if (getvrotate $arg1) [
        concatword "^f~" $arg3 " rotate:^t^f" $arg2 (getvrotate $arg1) " ^f7^"" (at $_Labels_TexRotate (getvrotate $arg1)) "^"^n"
    ]
]

//#############################################################################################################################################
EH_TexOffset = [
    if (|| (!= (at (getvoffset $arg1) 0) 0) (!= (at (getvoffset $arg1) 1) 0) ) [
        concatword "^f~" $arg3 " offset:^t^f3" (at (getvoffset $arg1) 0) "^t^f0" (at (getvoffset $arg1) 1) "^n"
    ]
]

//#############################################################################################################################################
EH_TexScale = [
    if (!=f (getvscale $arg1) 1.0) [
        concatword "^f~" $arg3 " scale:^t^f" $arg2 (getvscale $arg1) "^n"
    ]
]

//#############################################################################################################################################
EH_TexScroll = [
    if (|| (!=f (at (getvscroll $arg1) 0) 0.0) (!=f (at (getvscroll $arg1) 1) 0.0) ) [
        concatword "^f~" $arg3 " scroll:^t^f3" (at (getvscroll $arg1) 0) "^t^f0" (at (getvscroll $arg1) 1) "^n"
    ]
]

//#############################################################################################################################################
EH_TexSmooth = [
    if (!= (getvsmooth $arg1) -1) [
        concatword "^f~" $arg3 " smooth: ^f" $arg2 "group: "  (getvsmooth @arg1) "  threshold: " (getsmoothangle (getvsmooth @arg1)) "^n"
    ]
]

//#############################################################################################################################################
EH_vShaderParams = [
    if (getvshaderparamnames $arg1) [
        ParamList = (getvshaderparamnames $arg1)
        ListLen = (listlen $ParamList)
        String = (concatword "^f" $arg2)
        if (> $ListLen 1) [
            //  getvshaderparamnames iSlot
            //  getvshaderparam      iSlot "ParamName"
            loop iParam $ListLen [
                String = (concatword $String "^"" (at $ParamList $iParam) "^" " (getvshaderparam $arg1 (at $ParamList $iParam)) "  ")
            ]
        ][
            String = (concatword $String "^"" $ParamList "^" " (getvshaderparam $arg1 $ParamList) )
        ]
        concatword "^f~" $arg3 " vshaderparam: " $String "^n"
    ]
]

//#############################################################################################################################################
EH_TexLayer = [
    if (getvlayer $arg1) [
        if $edithud_showtexparamslayer [
            iSlot = (getvlayer $arg1)
            format "^f~+ layer:^t^f~[^f6%1^f~] ^f6^"%2^"^n%3%4%5%6%7%8%9" (
                $iSlot
            )(  gettexname $iSlot
            )(  EH_TexColor      $iSlot $arg2 "+"
            )(  EH_TexAlpha      $iSlot $arg2 "+"
            )(  EH_TexOffset     $iSlot $arg2 "+"
            )(  EH_TexRotate     $iSlot $arg2 "+"
            )(  EH_TexScale      $iSlot $arg2 "+"
            )(  EH_TexScroll     $iSlot $arg2 "+"
          //)(  EH_TexSmooth     $iSlot $arg2 "+"
            )(  EH_vShaderParams $iSlot $arg2 "+"
          //)(  EH_TexLayer      $iSlot $arg2 "+"
            )
        ][
            concatword "^f~" $arg3 " layer:^t^f~[^f" $arg2 (getvlayer $arg1) "^f~] ^f" $arg2 "^"" (gettexname (getvlayer $arg1)) "^"^n"
        ]
    ]
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Selection behavior is a bit weird:
//    * If you have a Clicked_Selection AND a Hover_Selection, "enthavesel" will still return 1
//          Having "enthavesel" return a special case (or just "2") for Clicked/Hover combo would be useful.
//
//    * If you edit Attributes with a Multi_Selection,
//      it will take the value of the first ent, alter it,
//      then apply it to all ents selected
//
EH__EntitySelection = [
    if (= $enthavesel 1) [
        if (strcmp (enttype) "particles") [
            EH_ParticleTypeIsValid (|| (&& (>= (entattr 0) 0) (!= (entattr 0) 8) (<= (entattr 0) 13)) (&& (>= (entattr 0) 32) (<= (entattr 0) 35)))
        ][
            EH_ParticleTypeIsValid 0
        ]
        format "^f~[^f6%1^f~] ^f6%2%3%4%5%6%7^n^n" (entindex) (enttype) @[EH_EntAttr_@(enttype)]
    ][
        if (> $enthavesel 1) [
            format "^f~[^f3~^f~] ^f3%1 entities selected%2%3%4%5%6^n^n" (enthavesel) @EH_EntAttr_
        ]
    ]
]


//#############################################################################################################################################
//#############################################################################################################################################
//  NOTE: Entity-Attributes are labeled 1-5, instead of 0-4, to correspond to default keybinds for editing values. ( NumRow 1-5 )
EH_EntAttr_ = [(
    concatword "^n^f4* attr1:^t" (entattr 0) )(
    concatword "^n^f4* attr2:^t" (entattr 1) )(
    concatword "^n^f4* attr3:^t" (entattr 2) )(
    concatword "^n^f4* attr4:^t" (entattr 3) )(
    concatword "^n^f4* attr5:^t" (entattr 4) )
]


//#############################################################################################################################################
//  Miscellaneous:
EH_EntAttr_none?  = $EH_EntAttr_
EH_EntAttr_carrot = $EH_EntAttr_


//#############################################################################################################################################
//  Pickups:
EH_EntAttr_bullets      = $EH_EntAttr_
EH_EntAttr_cartridges   = $EH_EntAttr_
EH_EntAttr_grenades     = $EH_EntAttr_
EH_EntAttr_riflerounds  = $EH_EntAttr_
EH_EntAttr_rockets      = $EH_EntAttr_
EH_EntAttr_shells       = $EH_EntAttr_
EH_EntAttr_health       = $EH_EntAttr_
EH_EntAttr_healthboost  = $EH_EntAttr_
EH_EntAttr_greenarmour  = $EH_EntAttr_
EH_EntAttr_yellowarmour = $EH_EntAttr_
EH_EntAttr_quaddamage   = $EH_EntAttr_


//#############################################################################################################################################
EH_EntAttr_base = [(
    concatword "^n^f~* ammo:^t^f2"  (entattr 0) "^f~ ^"" (? (< (entattr 0) 0) "^f5random-group" (? (> (entattr 0) 6) "^f3INVALID" (unescape (at $EH_BaseAmmoTypes (entattr 0))) ) ) "^f~^"" )(
    concatword "^n^f~* index:^t^f2" (entattr 1) (? (> (entattr 1) 0) (? (! (strcmp (getalias (concatword "base_" (entattr 1)) ) ""))  (concatword "^f~ ^"" (getalias (concatword "base_" (entattr 1)) ) "^"") )) )(
    concatword "^n^f4* attr3:^t"    (entattr 2) )(
    concatword "^n^f4* attr4:^t"    (entattr 3) )(
    concatword "^n^f4* attr5:^t"    (entattr 4) )
]
EH_BaseAmmoTypes = [
    "^f7random"
    "^f3shells"
    "^f0bullets"
    "^f2rockets"
    "^f1riflerounds"
    "^f8grenades"
    "^f4cartridges"
]


//#############################################################################################################################################
EH_EntAttr_flag = [(
    concatword "^n^f~* yaw:^t^f2"  (entattr 0) )(
    concatword "^n^f~* team:^t^f2" (entattr 1) )(
    concatword "^n^f4* attr3:^t"   (entattr 2) )(
    concatword "^n^f4* attr4:^t"   (entattr 3) )(
    concatword "^n^f4* attr5:^t"   (entattr 4) )
]


//#############################################################################################################################################
EH_EntAttr_jumppad = [(
    concatword "^n^f~* forceZ:^t^f2" (entattr 0) )(
    concatword "^n^f~* forceY:^t^f2" (entattr 1) )( // Sauer's axes are weird.
    concatword "^n^f~* forceX:^t^f2" (entattr 2) )(
    concatword "^n^f4* attr4:^t"     (entattr 3) )(
    concatword "^n^f4* attr5:^t"     (entattr 4) )
]


//#############################################################################################################################################
EH_EntAttr_playerstart = [(
    concatword "^n^f~* yaw:^t^f2"  (entattr 0) )(
    concatword "^n^f~* team:^t^f2" (entattr 1) )(
    concatword "^n^f4* attr3:^t"   (entattr 2) )(
    concatword "^n^f4* attr4:^t"   (entattr 3) )(
    concatword "^n^f4* attr5:^t"   (entattr 4) )
]


//#############################################################################################################################################
EH_EntAttr_teleport = [(
    concatword "^n^f~* index:^t^f2"             (entattr 0) )(
    concatword "^n^f~* model:^t^f2"             (entattr 1) )(
    concatword "^n^f~* preserve velocity:^t^f2" (entattr 2) )( // Maybe?
    concatword "^n^f4* attr4:^t"                (entattr 3) )(
    concatword "^n^f4* attr5:^t"                (entattr 4) )
]


//#############################################################################################################################################
EH_EntAttr_teledest = [(
    concatword "^n^f~* yaw:^t^f2"   (entattr 0) )(
    concatword "^n^f~* index:^t^f2" (entattr 1) )(
    concatword "^n^f4* attr3:^t"    (entattr 2) )(
    concatword "^n^f4* attr4:^t"    (entattr 3) )(
    concatword "^n^f4* attr5:^t"    (entattr 4) )
]


//#############################################################################################################################################
EH_EntAttr_envmap = [(
    concatword "^n^f~* radius:^t^f2" (entattr 0) )(
    concatword "^n^f4* attr2:^t"     (entattr 1) )(
    concatword "^n^f4* attr3:^t"     (entattr 2) )(
    concatword "^n^f4* attr4:^t"     (entattr 3) )(
    concatword "^n^f4* attr5:^t"     (entattr 4) )
]


//#############################################################################################################################################
EH_EntAttr_light = [(
    concatword "^n^f~* radius:^t^f2" (entattr 0) (? (= (entattr 0) 0) "^f~ ^"infinite^"") )(
    concatword "^n^f~* ^f3red:^t"    (entattr 1)                                          )(
    concatword "^n^f~* ^f0green:^t"  (entattr 2)                                          )(
    concatword "^n^f~* ^f1blue:^t"   (entattr 3)                                          )(
    concatword "^n^f4* attr5:^t"     (entattr 4)                                          )
]


//#############################################################################################################################################
EH_EntAttr_spotlight = [(
    concatword "^n^f~* angle:^t^f2" (entattr 0) )(
    concatword "^n^f4* attr2:^t"    (entattr 1) )(
    concatword "^n^f4* attr3:^t"    (entattr 2) )(
    concatword "^n^f4* attr4:^t"    (entattr 3) )(
    concatword "^n^f4* attr5:^t"    (entattr 4) )
]


//#############################################################################################################################################
EH_EntAttr_mapmodel = [(
    concatword "^n^f~* yaw:^t^f2"   (entattr 0)                                          )(
    concatword "^n^f~* index:^t^f2" (entattr 1) " ^f~^"" (mapmodelname (entattr 1)) "^"" )(
    concatword "^n^f4* attr3:^t"    (entattr 2)                                          )(
    concatword "^n^f4* attr4:^t"    (entattr 3)                                          )(
    concatword "^n^f4* attr5:^t"    (entattr 4)                                          )
]


//#############################################################################################################################################
EH_EntAttr_sound = [(
    concatword "^n^f~* index:^t^f2"         (entattr 0) )(
    concatword "^n^f~* radius stereo:^t^f2" (entattr 1) )(
    concatword "^n^f~* radius mono:^t^f2"   (entattr 2) )(
    concatword "^n^f4* attr4:^t"            (entattr 3) )(
    concatword "^n^f4* attr5:^t"            (entattr 4) )
]


//#############################################################################################################################################
EH_EntAttr_particles = [(
        format "^n^f~* type:^t^f2%1 ^f~^"%2^f~^"" (
            entattr 0
        )(  if $EH_ParticleTypeIsValid [unescape (at $(concatword "EH_ParticleLabels_" (entattr 0)) 0)] [result "???"]
        )
    )(
        EH_AttrLabel = (EH_GetParticleAttrLabel 1)
        format "^n^f~* %1:^t%2 %3" (
            unescape $EH_AttrLabel
        )(  if (|| (! $EH_ParticleTypeIsValid) (strcmp (unescape $EH_AttrLabel) "^f4attr2")) [concatword "^f4" (entattr 1)] [concatword "^f2" (entattr 1)]
        )(  if (&& (&& (>= (entattr 1) 0)(< (entattr 1) 6) )(|| (|| (= (entattr 0) 4) (= (entattr 0) 7) )(strcmp (unescape $EH_AttrLabel) "^f~dir")))[
                unescape $(concatword "EH_ParticleDirections_" (entattr 1))
            ][
                if (&& (strcmp (unescape $EH_AttrLabel) "^f~variety")(&& (>= (entattr 1) 256) (< (entattr 1) 320)))[
                    unescape $(concatword "EH_ParticleVarieties_" (mod (entattr 1) 64))
                ]
            ]
        )
    )(
        EH_AttrLabel = (EH_GetParticleAttrLabel 2)
        format "^n^f~* %1:^t%2%3" (
            unescape $EH_AttrLabel
        )(  if (|| (! $EH_ParticleTypeIsValid) (strcmp (unescape $EH_AttrLabel) "^f4attr3")) [result "^f4"] [result "^f2"]
        )(  at $entget 3 //entattr 2 <-- This doesn't return colors in 16-bit hex format.
        )
    )(
        EH_AttrLabel = (EH_GetParticleAttrLabel 3)
        format "^n^f~* %1:^t%2%3" (
            unescape $EH_AttrLabel
        )(  if (|| (! $EH_ParticleTypeIsValid) (strcmp (unescape $EH_AttrLabel) "^f4attr4")) [result "^f4"] [result "^f2"]
        )(  if (= (entattr 0) 5) [entattr 3] [at $entget 4] //entattr 3    <-- This doesn't return colors in 16-bit hex format.
        )                                                   //at $entget 4 <-- This shouldn't return a color for particle_type 5 "meter".
    )(
        EH_AttrLabel = (EH_GetParticleAttrLabel 4)
        format "^n^f~* %1:^t%2" (
            unescape $EH_AttrLabel
        )(  if (|| (! $EH_ParticleTypeIsValid) (strcmp (unescape $EH_AttrLabel) "^f4attr5")) [concatword "^f4" (entattr 4)] [concatword "^f2" (entattr 4)]
        )
    )
]

EH_GetParticleAttrLabel = [
    if $EH_ParticleTypeIsValid [
        result (at $(concatword "EH_ParticleLabels_" (entattr 0)) $arg1)
    ][
        result (at $EH_ParticleLabels_ $arg1)
    ]
]

EH_ParticleLabels_ = ["???" "^f4attr2" "^f4attr3" "^f4attr4" "^f4attr5"]

//            TypeIndex     Attr0                              Attr1        Attr2       Attr3      Attr4
EH_ParticleLabels_0  = ["flame & smoke"                    "^f~width"   "^f~size"   "^f~color" "^f4attr5"]    // Additive & Alpha
EH_ParticleLabels_1  = ["steam"                            "^f~dir"     "^f4attr3"  "^f4attr4" "^f4attr5"]    // Additive
EH_ParticleLabels_2  = ["blob fountain"                    "^f~dir"     "^f~color"  "^f4attr4" "^f4attr5"]    // Alpha-ish?
EH_ParticleLabels_3  = ["fireball"                         "^f~size"    "^f~color"  "^f4attr4" "^f4attr5"]    // ~
EH_ParticleLabels_4  = ["tracer varieties ^f4(256-319)"    "^f~variety" "^f~length" "^f~color" "^f4attr5"]    // Additive       DIR_OR_VAR
EH_ParticleLabels_5  = ["meter"                            "^f~fill"    "^f~color"  "^f4attr4" "^f4attr5"]    // ~
EH_ParticleLabels_6  = ["meter 2"                          "^f~fill"    "^f~color"  "^f~color" "^f4attr5"]    // ~
EH_ParticleLabels_7  = ["lightning varieties ^f4(256-319)" "^f~variety" "^f~length" "^f~color" "^f4attr5"]    // Alpha          DIR_OR_VAR
EH_ParticleLabels_8  = $EH_ParticleLabels_
EH_ParticleLabels_9  = ["smoke varieties ^f4(256-319)"     "^f~variety" "^f~width"  "^f~color" "^f~lifetime"] // Additive
EH_ParticleLabels_10 = ["blob varieties ^f4(256-319)"      "^f~variety" "^f~width"  "^f~color" "^f~lifetime"] // Alpha-ish?
EH_ParticleLabels_11 = ["flame"                            "^f~width"   "^f~size"   "^f~color" "^f4attr5"]    // Additive
EH_ParticleLabels_12 = ["smoke"                            "^f~width"   "^f~size"   "^f~color" "^f4attr5"]    // Alpha
EH_ParticleLabels_13 = ["snowflake varieties ^f4(256-319)" "^f~variety" "^f~width"  "^f~color" "^f~lifetime"] // Additive
i = 14 while [<= $i 31] [EH_ParticleLabels_@i = $EH_ParticleLabels_]
EH_ParticleLabels_32 = ["lens flare" "^f~colorR" "^f~colorG" "^f~colorB" "^f4attr5"]
EH_ParticleLabels_33 = ["lens flare" "^f~colorR" "^f~colorG" "^f~colorB" "^f4attr5"]
EH_ParticleLabels_34 = ["lens flare" "^f~colorR" "^f~colorG" "^f~colorB" "^f4attr5"]
EH_ParticleLabels_35 = ["lens flare" "^f~colorR" "^f~colorG" "^f~colorB" "^f4attr5"]

EH_ParticleDirections_0 = "^f~^"up^""
EH_ParticleDirections_1 = "^f~^"left^""
EH_ParticleDirections_2 = "^f~^"forward^""
EH_ParticleDirections_3 = "^f~^"down^""
EH_ParticleDirections_4 = "^f~^"right^""
EH_ParticleDirections_5 = "^f~^"backward^""

EH_ParticleVarieties_0  = "^f~^"circle on planeZ^""
EH_ParticleVarieties_1  = "^f~^"circle on planeX^""
EH_ParticleVarieties_2  = "^f~^"circle on planeY^""
EH_ParticleVarieties_3  = "^f~^"cylinder shell +Z^""
EH_ParticleVarieties_4  = "^f~^"cylinder shell +X^""
EH_ParticleVarieties_5  = "^f~^"cylinder shell +Y^""
EH_ParticleVarieties_6  = "^f~^"cone shell +Z^""
EH_ParticleVarieties_7  = "^f~^"cone shell +X^""
EH_ParticleVarieties_8  = "^f~^"cone shell +Y^""
EH_ParticleVarieties_9  = "^f~^"cone shell -Z^""
EH_ParticleVarieties_10 = "^f~^"cone shell -X^""
EH_ParticleVarieties_11 = "^f~^"cone shell -Y^""
EH_ParticleVarieties_12 = "^f~^"plane volume +Z^""
EH_ParticleVarieties_13 = "^f~^"plane volume +X^""
EH_ParticleVarieties_14 = "^f~^"plane volume +Y^""
EH_ParticleVarieties_15 = "^f~^"line volume on planeY +Z^""
EH_ParticleVarieties_16 = "^f~^"line volume on planeZ +X^""
EH_ParticleVarieties_17 = "^f~^"line volume on planeX +Y^""
EH_ParticleVarieties_18 = "^f~^"line volume on planeX +Z^""
EH_ParticleVarieties_19 = "^f~^"line volume on planeY +X^""
EH_ParticleVarieties_20 = "^f~^"line volume on planeZ +Y^""
EH_ParticleVarieties_21 = "^f~^"sphere^""
EH_ParticleVarieties_22 = "^f~^"sphere^""
EH_ParticleVarieties_23 = "^f~^"sphere^""
EH_ParticleVarieties_24 = "^f~^"flat on planeZ -Z^""
EH_ParticleVarieties_25 = "^f~^"flat on planeX -Z^"" //  These only work with "smoke/blob/snow varieties" types.
EH_ParticleVarieties_26 = "^f~^"flat on planeY -Z^""
EH_ParticleVarieties_27 = "^f~^"dummy^""
EH_ParticleVarieties_28 = "^f~^"dummy^""
EH_ParticleVarieties_29 = "^f~^"dummy^"" //  These have no initialized state and just slowly fall or rise.
EH_ParticleVarieties_30 = "^f~^"dummy^""
EH_ParticleVarieties_31 = "^f~^"dummy^""

EH_ParticleVarieties_32 = "^f~^"inverse circle on planeZ^""
EH_ParticleVarieties_33 = "^f~^"inverse circle on planeX^""
EH_ParticleVarieties_34 = "^f~^"inverse circle on planeY^""
EH_ParticleVarieties_35 = "^f~^"cylinder shell -Z^""
EH_ParticleVarieties_36 = "^f~^"cylinder shell -X^""
EH_ParticleVarieties_37 = "^f~^"cylinder shell -Y^""
EH_ParticleVarieties_38 = "^f~^"inverse cone shell +Z^""
EH_ParticleVarieties_39 = "^f~^"inverse cone shell +X^""
EH_ParticleVarieties_40 = "^f~^"inverse cone shell +Y^""
EH_ParticleVarieties_41 = "^f~^"inverse cone shell -Z^""
EH_ParticleVarieties_42 = "^f~^"inverse cone shell -X^""
EH_ParticleVarieties_43 = "^f~^"inverse cone shell -Y^""
EH_ParticleVarieties_44 = "^f~^"plane volume -Z^""
EH_ParticleVarieties_45 = "^f~^"plane volume -X^""
EH_ParticleVarieties_46 = "^f~^"plane volume -Y^""
EH_ParticleVarieties_47 = "^f~^"line volume on planeY -Z^""
EH_ParticleVarieties_48 = "^f~^"line volume on planeZ -X^""
EH_ParticleVarieties_49 = "^f~^"line volume on planeX -Y^""
EH_ParticleVarieties_50 = "^f~^"line volume on planeX -Z^""
EH_ParticleVarieties_51 = "^f~^"line volume on planeY -X^""
EH_ParticleVarieties_52 = "^f~^"line volume on planeZ -Y^""
EH_ParticleVarieties_53 = "^f~^"inverse sphere^""
EH_ParticleVarieties_54 = "^f~^"inverse sphere^""
EH_ParticleVarieties_55 = "^f~^"inverse sphere^""
EH_ParticleVarieties_56 = "^f~^"flat on planeZ -Z^""
EH_ParticleVarieties_57 = "^f~^"flat on planeX -Z^"" //  These only work with "smoke/blob/snow varieties" types.
EH_ParticleVarieties_58 = "^f~^"flat on planeY -Z^""
EH_ParticleVarieties_59 = "^f~^"dummy^""
EH_ParticleVarieties_60 = "^f~^"dummy^""
EH_ParticleVarieties_61 = "^f~^"dummy^"" //  These have no initialized state and just slowly fall or rise.
EH_ParticleVarieties_62 = "^f~^"dummy^""
EH_ParticleVarieties_63 = "^f~^"dummy^""


//#############################################################################################################################################
EH_EntAttr_barrel = [(
    concatword "^n^f~* yaw:^t^f2" (entattr 0) )(
    concatword "^n^f4* attr2:^t"  (entattr 1) )(
    concatword "^n^f4* attr3:^t"  (entattr 2) )(
    concatword "^n^f4* attr4:^t"  (entattr 3) )(
    concatword "^n^f4* attr5:^t"  (entattr 4) )
]
EH_EntAttr_box = [(
    concatword "^n^f~* yaw:^t^f2" (entattr 0) )(
    concatword "^n^f4* attr2:^t"  (entattr 1) )(
    concatword "^n^f4* attr3:^t"  (entattr 2) )(
    concatword "^n^f4* attr4:^t"  (entattr 3) )(
    concatword "^n^f4* attr5:^t"  (entattr 4) )
]
EH_EntAttr_elevator = [(
    concatword "^n^f~* yaw:^t^f2" (entattr 0) )(
    concatword "^n^f4* attr2:^t"  (entattr 1) )(
    concatword "^n^f4* attr3:^t"  (entattr 2) )(
    concatword "^n^f4* attr4:^t"  (entattr 3) )(
    concatword "^n^f4* attr5:^t"  (entattr 4) )
]
EH_EntAttr_platform = [(
    concatword "^n^f~* yaw:^t^f2" (entattr 0) )(
    concatword "^n^f4* attr2:^t"  (entattr 1) )(
    concatword "^n^f4* attr3:^t"  (entattr 2) )(
    concatword "^n^f4* attr4:^t"  (entattr 3) )(
    concatword "^n^f4* attr5:^t"  (entattr 4) )
]
EH_EntAttr_monster = [(
    concatword "^n^f~* yaw:^t^f2" (entattr 0) )(
    concatword "^n^f4* attr2:^t"  (entattr 1) )(
    concatword "^n^f4* attr3:^t"  (entattr 2) )(
    concatword "^n^f4* attr4:^t"  (entattr 3) )(
    concatword "^n^f4* attr5:^t"  (entattr 4) )
]
EH_EntAttr_respawnpoint = [(
    concatword "^n^f~* yaw:^t^f2" (entattr 0) )(
    concatword "^n^f4* attr2:^t"  (entattr 1) )(
    concatword "^n^f4* attr3:^t"  (entattr 2) )(
    concatword "^n^f4* attr4:^t"  (entattr 3) )(
    concatword "^n^f4* attr5:^t"  (entattr 4) )
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EH__Vars = [
    String = ""
    if $edithud_listbools [
        ListLen = (listlen $edithud_listbools)
        loop iVar $ListLen [
            This = (at $edithud_listbools $iVar)
            String = (? $$This (concatword $String "^f0" $This "  ") (concatword $String "^f4" $This "  "))
        ]
    ]
    if $edithud_listboolsshy [
        ListLen = (listlen $edithud_listboolsshy)
        loop iVar $ListLen [
            This = (at $edithud_listboolsshy $iVar)
            if $$This [String = (concatword $String "^f8" $This "  ")]
        ]
    ]
    if $edithud_listboolsnotice [
        ListLen = (listlen $edithud_listboolsnotice)
        loop iVar $ListLen [
            This = (at $edithud_listboolsnotice $iVar)
            if $$This [String = (concatword $String (? (mod (div $getmillis 500) 2) "^f0" "^f3") $This "  ")]
        ]
    ]
    if $edithud_listvars [
        String = (concatword $String "^n")
        ListLen = (listlen $edithud_listvars)
        loop iVar $ListLen [
            This = (at $edithud_listvars $iVar)
            if (= (strstr $This "result") 0) [
                String = (concatword $String (This) "  ")
            ][
                String = (concatword $String "^f~" $This " ^f2" $$This "  ")
            ]
        ]
    ]
    result $String "^n"
]

