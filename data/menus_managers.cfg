///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  ZIP Package Manager:
nodebug [
    //
]

newgui "packagemanager" [
    guitext "TODO"
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  Entity Manager:
nodebug [
    defvarp EM_EntsPerColumn 16 32    64
    defvarp EM_ColumnsPerTab  1  2     4
    defvar  EM_EntsPerTab    -1 -1   512
    defvar  EM_NumOf_Columns -1 -1   625
    defvar  EM_NumOf_Tabs    -1 -1   625

    defvar  EM_WidthColumn   24 48    96
    defvar  EM_Width         -1 -1   384
    defvar  EM_Height        -1 -1    64

    defvar  EM_NumOf_Ents    -1 -1 10000  //  MAXENTS = 10,000
]

EM_GenEntList = [
    EM_EntList = ""

    cancelsel
    entfind *
    entloop [
        EM_EntList = (concat $EM_EntList (escape $entget))
    ]
    cancelsel

    EM_NumOf_Ents (- $numoctaents 1)
    EM_Recalc
]
EM_Recalc = [
    EM_EntsPerTab    (* $EM_EntsPerColumn $EM_ColumnsPerTab)
    EM_NumOf_Columns (+ (ceil (divf (+ $EM_NumOf_Ents 1) $EM_EntsPerColumn)) 0) //  (+ n 0) <-- Float to Int hack.
    EM_NumOf_Tabs    (+ (ceil (divf    $EM_NumOf_Columns $EM_ColumnsPerTab)) 0)
    EM_Width         (* $EM_ColumnsPerTab $EM_WidthColumn)
    EM_Height           $EM_EntsPerColumn
]

newgui "entitymanager" [
    if (|| (! $editing) (! (ingame))) [cleargui 1] [
        if (!= $EM_NumOf_Ents (- $numoctaents 1)) [EM_GenEntList]
        guistayopen [
            //#####################################################################################################################################
            guilist [// H
                guistrut $EM_Height 1
                guilist [// V
                    guistrut $EM_Width 1
                    //=====================================================================================================
                    // Is this the active Tab? If so, populate.
                    if (= $guitabnum 1) [
                        guititle "Entity Manager"
                        guibar
                        guialign 0 [// H
                            guilist [// V
                                guititle "Stats"
                                guistrut 1
                                guitext (concatword " NumOf Entities: " $EM_NumOf_Ents) 0
                                guitext " ^f4(Last index, count is +1.)" 0
                                guistrut 1
                                guibar
                                guititle "Options"
                                guistrut 1
                                guilist [
                                    guitext (format " EntsPerColumn:^t%1^t" $EM_EntsPerColumn) 0
                                    guibutton "" [EM_EntsPerColumn (+ $EM_EntsPerColumn -1); if (< $EM_EntsPerColumn 16) [EM_EntsPerColumn 16]; EM_Recalc] "val_dec"
                                    guibutton "" [EM_EntsPerColumn (+ $EM_EntsPerColumn  1); if (> $EM_EntsPerColumn 64) [EM_EntsPerColumn 64]; EM_Recalc] "val_inc"
                                ]
                                guilist [
                                    guitext (format " ColumnsPerTab: ^t%1^t" $EM_ColumnsPerTab) 0
                                    guibutton "" [EM_ColumnsPerTab (+ $EM_ColumnsPerTab -1); if (< $EM_ColumnsPerTab 1) [EM_ColumnsPerTab 1]; EM_Recalc] "val_dec"
                                    guibutton "" [EM_ColumnsPerTab (+ $EM_ColumnsPerTab  1); if (> $EM_ColumnsPerTab 8) [EM_ColumnsPerTab 8]; EM_Recalc] "val_inc"
                                ]
                                guistrut 1
                                guitext (concatword " NumOf Columns: ^t" $EM_NumOf_Columns) 0
                                guitext (concatword " NumOf Tabs:    ^t" $EM_NumOf_Tabs   ) 0
                                guistrut 1
                            ]
                            //guibar
                        ]
                    ]
                    //=====================================================================================================
                ]
            ]
            //#####################################################################################################################################
            loop iTab $EM_NumOf_Tabs [
                guitab (* $iTab $EM_EntsPerTab)
                guilist [// H
                    //=====================================================================================================
                    // Is this the active Tab? If so, populate.
                    if (= $iTab (- $guitabnum 2)) [
                        iMdl = (* $iTab $EM_EntsPerTab)
                        iCol = 1
                        while [<= $iCol $EM_ColumnsPerTab] [
                            guilist [// V
                                iEND = (+ (* $iTab $EM_EntsPerTab) (- (* $iCol $EM_EntsPerColumn) 1))
                                while [<= $iMdl $iEND] [
                                    if (> $iMdl $EM_NumOf_Ents) [
                                        iMdl = (+ $iEND 1) // exitloop/break
                                    ][
                                        This = (at $EM_EntList $iMdl)
                                        guilist [// H
                                            guilist [guistrut  7 1; guialign 1 [guitext (concatword "^f7[^f2" (iMdl) "^f7]") 0]]
                                            guilist [guistrut 11 1; guialign 1 [guitext (concatword "^f2" (at $This 0)) 0]]
                                            guilist [guistrut  6 1; guialign 1 [guitext (concatword "^f2" (at $This 1)) 0]]
                                            guilist [guistrut  6 1; guialign 1 [guitext (concatword "^f2" (at $This 2)) 0]]
                                            guilist [guistrut  6 1; guialign 1 [guitext (concatword "^f2" (at $This 3)) 0]]
                                            guilist [guistrut  6 1; guialign 1 [guitext (concatword "^f2" (at $This 4)) 0]]
                                            guilist [guistrut  6 1; guialign 1 [guitext (concatword "^f2" (at $This 5)) 0]]
                                        ]
                                        iMdl = (+ $iMdl 1)
                                    ]
                                ]
                                iCol = (+ $iCol 1)
                            ]
                        ]
                    ]
                    //=====================================================================================================
                ]
            ]
            //#####################################################################################################################################
        ]
    ]
] "Info" [EM_GenEntList]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  Texture Slot Manager:
nodebug [
    defvarp TSM_SlotsPerColumn 16 32    64
    defvarp TSM_ColumnsPerTab   1  2     4
  //defvarp TSM_ShowSideBar     0  1     1
    defvarp TSM_ShowLayerParams 0  0     1

    defvar  TSM_WidthColumn    24 48    96
    defvar  TSM_WidthSideBar    0 50    96

    defvar  TSM_Width          -1 -1   480
    defvar  TSM_Height         -1 -1    64

    defvar  TSM_NumOf_Columns  -1 -1  4096
    defvar  TSM_NumOf_Tabs     -1 -1  4096
    defvar  TSM_SlotsPerTab    -1 -1 16384

    defvar  TSM_NumOf_tSlots   -1 -1 65535 //  Texture slot index is an 'unsigned short'.
    defvar  TSM_NumOf_vSlots   -1 -1 65535
    defvar  TSM_NumOf_AllSlots -1 -1 65535
    defvar  TSM_SelectedSlot   -1 -1 65535
]

TODO 0 "menus.cfg -- TSM - 'history' section: Show last used & last replaced texture."
//    //  getcurtex       "Get Current Texture"  Index of last used texture.
//    //  getreptex       "Get Replace Texture"  Index of last texture replaced. (/replace uses this)
//    //result "^f~[^f2~^f~] ^f2^"~^"^n^n" //  None.
//    format "^f~[^f0%1^f~] ^f0^"%2^"^n^f~[^f0%3^f~] ^f0^"%4^"^n^n" $getcurtex (gettexname $getcurtex) $getreptex (gettexname $getreptex)

TODO 0 "menus.cfg -- TSM - 'replacetex' section."
// replacetex    $TSM_WithMe $TSM_ReplaceMe
// replacetexsel $TSM_WithMe $TSM_ReplaceMe

newgui "texslotmanager" [
    if (|| (! $editing) (! (ingame))) [cleargui 1] [
        if (!= $TSM_NumOf_AllSlots (- $numvslots 1)) [TSM_Update]
        guistayopen [
            //#####################################################################################################################################
            guilist [// H
                guistrut $TSM_Height 1
                guilist [// V
                    guistrut $TSM_Width 1
                    guititle "Texture Slot Manager"
                    guibar //-------------------------------------------------------------------------
                    guialign 0 [// H
                        guilist [// V
                            guititle "Stats"
                            guistrut 1
                            guitext (concatword " NumOf tSlots:  ^t"  $TSM_NumOf_tSlots  ) 0
                            guitext (concatword " NumOf vSlots:  ^t"  $TSM_NumOf_vSlots  ) 0
                            guitext (concatword " Total TexSlots: ^t" $TSM_NumOf_AllSlots) 0
                            guitext " ^f4(Last index, count is +1.)" 0
                            guistrut 1
                            guibar //-------------------------------------------------------------------------
                            guititle "Options"
                            guistrut 1
                            guilist [// H
                                guitext (format " ^f7SlotsPerColumn:^t%1^t"  $TSM_SlotsPerColumn) 0
                                guibutton "" [TSM_SlotsPerColumn (+ $TSM_SlotsPerColumn -1); if (< $TSM_SlotsPerColumn 16) [TSM_SlotsPerColumn 16]; TSM_Recalc] "val_dec"
                                guibutton "" [TSM_SlotsPerColumn (+ $TSM_SlotsPerColumn  1); if (> $TSM_SlotsPerColumn 64) [TSM_SlotsPerColumn 64]; TSM_Recalc] "val_inc"
                            ]
                            guilist [// H
                                guitext (format " ^f7ColumnsPerTab: ^t%1^t"  $TSM_ColumnsPerTab) 0
                                guibutton "" [TSM_ColumnsPerTab (+ $TSM_ColumnsPerTab -1); if (< $TSM_ColumnsPerTab 1) [TSM_ColumnsPerTab 1]; TSM_Recalc] "val_dec"
                                guibutton "" [TSM_ColumnsPerTab (+ $TSM_ColumnsPerTab  1); if (> $TSM_ColumnsPerTab 4) [TSM_ColumnsPerTab 4]; TSM_Recalc] "val_inc"
                            ]
                            guistrut 1
                            guitext (concatword " NumOf Columns: ^t" $TSM_NumOf_Columns) 0
                            guitext (concatword " NumOf Tabs:    ^t" $TSM_NumOf_Tabs   ) 0
                            guistrut 1
                            guilist [guistrut 1; guicheckbox " Show Layer Params" TSM_ShowLayerParams]
                        ]
                        guibar //-------------------------------------------------------------------------
                        guilist [// V
                            guititle "Info"
                            guistrut 1
                            guitext "   ^f7White^t = Texture is loaded." 0
                            guitext "   ^f4Grey^t = Texture is not loaded." 0
                            guitext "   ^f2Yellow^t = Texture is vSlot." 0
                            guistrut 1
                            guitext " A texture can be loaded and un-used." 0
                            guitext " Reload map if you would like to see if the map is using a texture. Or use ^f2/resetgl" 0
                            guistrut 1
                            guibar //-------------------------------------------------------------------------
                            guititle "CleanUp / Optimize"
                            guistrut 1
                            guitext " vSlots are automatically optimized upon ^f2/savemap^f~." 0
                            guistrut 1
                            guitext " vSlots will automatically optimize when this many new vslots have been created:" 0
                            guistrut 0.5
                            guilist [// H
                                guitext "   autocompactvslots: " 0
                                guilist [// V
                                    guistrut 32 1
                                    guislider autocompactvslots 0 1024 [autocompactvslots (round $autocompactvslots 32)]
                                ]
                                guitext "^f4 (default 256)" 0
                            ]
                            guistrut 1.5
                            guitext " Manually optimize vSlots:" 0
                            guistrut 0.5
                            guilist [guistrut 3; guibutton "^f2/compactvslots" [compactvslots]]
                            guistrut 1.5
                            guitext " This will set the texture of all hidden cube faces to slot[1] (default texture):" 0
                            guistrut 0.5
                            guilist [guistrut 3; guibutton "^f2/fixinsidefaces" [fixinsidefaces]]
                            guistrut 1
                        ]
                    ]
                ]
            ]
            //#####################################################################################################################################
            loop iTab $TSM_NumOf_Tabs [
                guitab (* $iTab $TSM_SlotsPerTab)
                guialign 0 [// H
                    guistrut $TSM_Height 1
                    //=========================================================================================================
                    // Is this the active Tab? If so, populate.
                    if (= $iTab (- $guitabnum 2)) [
                        iTex = (* $iTab $TSM_SlotsPerTab)
                        iCol = 1
                        while [<= $iCol $TSM_ColumnsPerTab] [
                            guilist [// V
                                guistrut $TSM_WidthColumn 1
                                iEND = (+ (* $iTab $TSM_SlotsPerTab) (- (* $iCol $TSM_SlotsPerColumn) 1))
                                while [<= $iTex $iEND] [
                                    if (> $iTex $TSM_NumOf_AllSlots) [
                                        iTex = (+ $iEND 1) // exitloop/break
                                    ][
                                        if (= (getslottex $iTex) -1) [
                                            // vSlot:
                                            guibutton (concatword " ^f7[^f2" $iTex "^f7] " (? (= $iTex $TSM_SelectedSlot) "^f8" "^f2") (gettexname $iTex)) (concat "TSM_SelectedSlot =" $iTex) 0
                                        ][
                                            if (texloaded $iTex) [
                                                // tSlot Loaded:
                                                guibutton (concatword " ^f7[" $iTex "] " (? (= $iTex $TSM_SelectedSlot) "^f8" "^f7") (gettexname $iTex)) (concat "TSM_SelectedSlot =" $iTex) 0
                                            ][
                                                // tSlot Not Loaded:
                                                guibutton (concatword " ^f7[" $iTex "] " (? (= $iTex $TSM_SelectedSlot) "^f8" "^f4") (gettexname $iTex)) (concat "TSM_SelectedSlot =" $iTex) 0
                                            ]
                                        ]
                                        iTex = (+ $iTex 1)
                                    ]
                                ]
                                iCol = (+ $iCol 1)
                            ]
                        ]
                        guibar //-------------------------------------------------------------------------
                        guilist [// V
                            guistrut $TSM_WidthSideBar 1
                            guialign 0 [// H
                                guiimage (concatword "packages/" (gettexname $TSM_SelectedSlot)) 0 7 0 "data/cube.png" // <thumbnail:256>  <-- Breaks non-square textures.
                                if (!= (getvlayer $TSM_SelectedSlot) 0) [
                                    guiimage (concatword "packages/" (gettexname (getvlayer $TSM_SelectedSlot)) ) () 4 0 "data/cube.png"
                                ]
                            ]
                            if (< $TSM_SelectedSlot 0) [
                                guitext " ^f~[^f2~^f~,^f2~^f~] ^f2^"~^"" 0
                            ][
                                                                     guitext (concatword " ^f~[^f2" $TSM_SelectedSlot "^f~,^f20^f~] ^f2^"" (gettexname $TSM_SelectedSlot 0) "^"" ) 0
                                if (gettexname $TSM_SelectedSlot 1) [guitext (concatword " ^f~[^f2" $TSM_SelectedSlot "^f~,^f21^f~] ^f2^"" (gettexname $TSM_SelectedSlot 1) "^"" ) 0]
                                if (gettexname $TSM_SelectedSlot 2) [guitext (concatword " ^f~[^f2" $TSM_SelectedSlot "^f~,^f22^f~] ^f2^"" (gettexname $TSM_SelectedSlot 2) "^"" ) 0]
                                if (gettexname $TSM_SelectedSlot 3) [guitext (concatword " ^f~[^f2" $TSM_SelectedSlot "^f~,^f23^f~] ^f2^"" (gettexname $TSM_SelectedSlot 3) "^"" ) 0]
                                if (gettexname $TSM_SelectedSlot 4) [guitext (concatword " ^f~[^f2" $TSM_SelectedSlot "^f~,^f24^f~] ^f2^"" (gettexname $TSM_SelectedSlot 4) "^"" ) 0]
                                if (gettexname $TSM_SelectedSlot 5) [guitext (concatword " ^f~[^f2" $TSM_SelectedSlot "^f~,^f25^f~] ^f2^"" (gettexname $TSM_SelectedSlot 5) "^"" ) 0]
                                if (gettexname $TSM_SelectedSlot 6) [guitext (concatword " ^f~[^f2" $TSM_SelectedSlot "^f~,^f26^f~] ^f2^"" (gettexname $TSM_SelectedSlot 6) "^"" ) 0]
                                if (gettexname $TSM_SelectedSlot 7) [guitext (concatword " ^f~[^f2" $TSM_SelectedSlot "^f~,^f27^f~] ^f2^"" (gettexname $TSM_SelectedSlot 7) "^"" ) 0]
                            ]
                            TSM_Parameters $TSM_SelectedSlot
                            guibar //-------------------------------------------------------------------------
                            if (!= (getvlayer $TSM_SelectedSlot) 0) [
                                guitext (format " ^f~layer: ^f~[^f6%1^f~] ^f6^"%2^""  (getvlayer $TSM_SelectedSlot) (gettexname (getvlayer $TSM_SelectedSlot)) ) 0
                                if (!= $TSM_ShowLayerParams 0) [
                                    TSM_Parameters (getvlayer $TSM_SelectedSlot)
                                ]
                            ][
                                guitext " ^f~layer: ^f~[^f6~^f~] ^f6^"none^"" 0
                            ]
                        ]
                    ]
                    //=========================================================================================================
                ]
            ]
            //#####################################################################################################################################
        ]
    ]
] "Info" [TSM_Recalc]


TSM_Recalc = [
    TSM_SlotsPerTab   (* $TSM_SlotsPerColumn $TSM_ColumnsPerTab)
    TSM_NumOf_Columns (+ (ceil (divf (+ $TSM_NumOf_AllSlots 1) $TSM_SlotsPerColumn))) //  (+ n) <-- Float to Int hack.
    TSM_NumOf_Tabs    (+ (ceil (divf    $TSM_NumOf_Columns     $TSM_ColumnsPerTab ))) //  Why do round,floor,ceil return floats?
    TSM_Width         (+ (+ (* $TSM_ColumnsPerTab $TSM_WidthColumn) $TSM_WidthSideBar) 2) //<-- +2 to account for guibar.
    TSM_Height        $TSM_SlotsPerColumn
]

TSM_Update = [
    TSM_NumOf_tSlots   (- $numslots 1)
    TSM_NumOf_vSlots   (- $numvslots $numslots)
    TSM_NumOf_AllSlots (- $numvslots 1)
    TSM_SelectedSlot   -1
    TSM_Recalc
]


TSM_Parameters = [
    // ARGS  1: INDEX | Texture slot.
    guifreerow 12  1 [ guitext "color:" 0
             ]  8  1 [ guitext (concatword "^f3" (at (getvcolor @arg1) 0)) 0
             ]  8  1 [ guitext (concatword "^f0" (at (getvcolor @arg1) 1)) 0
             ]  8  1 [ guitext (concatword "^f1" (at (getvcolor @arg1) 2)) 0
    ]
    guistrut 0.08333 //0.09375
    guifreerow 12  1 [ guitext "alpha:" 0
             ]  8  1 [ guitext (concatword "^f5" (at (getvalpha @arg1) 0)) 0
             ]  8  1 [ guitext (concatword "^f5" (at (getvalpha @arg1) 1)) 0
    ]
    guistrut 0.08333
    guifreerow 12  1 [ guitext "rotate:" 0
             ]  8  1 [ guitext (concatword "^f2" (getvrotate @arg1)) 0
             ]  1 -1 [ guitext (concatword " ^f7^"" (at $Labels_TexRotate (getvrotate @arg1)) "^"") 0
    ]
    guistrut 0.08333
    guifreerow 12  1 [ guitext "offset:" 0
             ]  8  1 [ guitext (concatword "^f3" (at (getvoffset @arg1) 0)) 0
             ]  8  1 [ guitext (concatword "^f0" (at (getvoffset @arg1) 1)) 0
    ]
    guistrut 0.08333
    guifreerow 12  1 [ guitext "scale:" 0
             ]  8  1 [ guitext (concatword "^f2" (getvscale @arg1)) 0
    ]
    guistrut 0.08333
    guifreerow 12  1 [ guitext "scroll:" 0
             ]  8  1 [ guitext (concatword "^f3" (at (getvscroll @arg1) 0)) 0
             ]  8  1 [ guitext (concatword "^f0" (at (getvscroll @arg1) 1)) 0
    ]
    guistrut 0.08333
    guifreerow 12  1 [ guitext "smooth:" 0
             ]  7 -2 [ guitext " ^f2group:" 0
             ]  4  1 [ guitext (concatword "^f2" (getvsmooth @arg1)) 0
             ] 10 -2 [ guitext "  ^f2threshold:" 0
             ]  4  1 [ guitext (concatword "^f2" (getsmoothangle (getvsmooth @arg1))) 0
    ]
    guistrut 0.08333
    guifreerow 12  1 [ guitext "vshaderparam:" 0
             ]  1 -2 [ guitext (concatword " ^f2^"" (getvshaderparamnames @arg1) "^" " (getvshaderparam @arg1 (getvshaderparamnames @arg1)) ) 0
    ]
]

